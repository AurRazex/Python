id_client = 0
# data ={123: ('Sever','Alex','987','male'),
# 124: ('Chern','Evg','123','female')}

phone_book = []

def menu(data: list):
    while True:
        print('выберите действие: ')
        print('0 - Выйти из справочника')
        print('1 - Создать новую запись')
        print('2 - Распечатать содержимое справочника')
        print('3 - Выбрать запись по первой части фамилии')
        print('4 - Изменить поле(я) выбранной записи')
        print('5 - Удалить записи из справочника')
        print('6 - Импортировать данные из файла')
        print('7 - Экспортировать данные в файл')

        get = input('Введите действие: ')
        if get == '0':
            print('Адьос!')
            break
        elif get == '1':
            data = create (data, get_data())
        elif get == '2':
            print_phone_book(data)
        elif get == '3':
            read(data)
        elif get == '4':
            update(data)
        elif get == '5':
            delete(data)
        elif get == '6':
            name_file = get_file_name()
            batch_data = get_batch_data(name_file)
            data = batch_create(data, batch_data)
        elif get == '7':
            name_file = get_file_name()
            record_data(name_file, data)
        else:
            print('Некорректный ввод данных, введите еще раз: ')

def create(data: list, el: list) -> list: # добавляет запись в существующую книгу
    data.append(el)
    return data

def print_phone_book(data: list) -> None:  # Распечетывает добавленые записи
        print(f'контакты:  {data}')

def get_data() -> list:
    surname = input('введите фамилию: ')
    name = input('введите имя: ')
    phone = input('Введите номер телефона: ')
    discription = input('Введите описание: ')
    return (surname, name, phone, discription)

def get_file_name() -> str:
    return input('Введите имя файла: ')

def read(data: list) -> list:  # Поиск человека
    part_surname = input('Введите первые буквы фамилии: ')
    for el in data:
        if part_surname.casefold() in (el[0]).casefold():
            return el

def update(data: list) -> list: # Изменение данных в справочнике
    change_contact = read(data)

    while true:
        print(f'вы выбрали: {change_contact}')
        print('Выберите действие: ')
        print('0 - Выйти в главное меню')
        print('1 - Изменить Фамилию')
        print('2 - Изменить Имя')
        print('3 - Изменить телефон')
        print('4 - Изменить Описание')

        for el in data:
            if el == change_contact:
                get_action = input('Введите действие: ')
                if get_action =='0':
                    print('Успешно!')
                    break
                elif get_action =='1':
                    change_contact[0] = input('Введите Фмаилию: ')
                elif get_action =='2':
                    change_contact[1] = input('Введите Имя')
                elif get_action =='3':
                    change_contact[2] = input('Введите телефон')
                elif get_action =='4':
                    change_contact[3] = input('Введите описание')
                else:
                    print('некорректный ввод данных!')
                el = change_contact
        return data

def delete(data: list) -> list: # Удаление записи из списка
    del_contact = read(data)
    print(f'Вы удалили: {del_contact}')
    for el in data:
        if el == del_contact:
            data.remove(el)
            break
    return data

def get_batch_data(name_file: str) -> list:
    lst = []
    with open('data01.txt', 'r', encoding = 'utf-8') as file:
        for line in file:
            lst.append(list(line.split('#')))
    return lst

def batch_create(data: list, batch_data) -> list:
    for el in batch_data:
        data = create(data, id_client, el)
    return data

def record_data(name_file, data):
    with open ('data01.txt', 'w', encoding = 'utf-8') as file:
        for el in data:
            file.write(f'{el[0]};{el[1]};{el[2]};{el[3]}\n')

menu(phone_book)